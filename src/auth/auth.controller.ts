// src/auth/auth.controller.ts
import { Controller, Post, Body, Request, UseGuards } from '@nestjs/common';
import { ApiTags, ApiOperation, ApiBody, ApiResponse } from '@nestjs/swagger';
import { LoginDto } from './dto/login.dto';
import { LoginResponseDto } from './dto/login-response.dto';
import { AuthService } from './auth.service';
import { Public } from './decorators/public.decorator';
import { LocalAuthGuard } from './guards/local-auth.guard'; // üëà –î–û–î–ê–ô –¶–ï

@ApiTags('auth')
@Controller('auth')
export class AuthController {
  constructor(private readonly authService: AuthService) {}

  @Public()
  @UseGuards(LocalAuthGuard) // üëà –û–°–ù–û–í–ù–ê –ê–ù–ù–û–¢–ê–¶–Ü–Ø
  @Post('login')
  @ApiOperation({ summary: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ –ª–æ–≥—ñ–Ω–æ–º —Ç–∞ –ø–∞—Ä–æ–ª–µ–º' })
  @ApiBody({ type: LoginDto })
  @ApiResponse({
    status: 201,
    description: '–£—Å–ø—ñ—à–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è, –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è JWT —Ç–æ–∫–µ–Ω',
    type: LoginResponseDto,
  })
  async login(@Body() _dto: LoginDto, @Request() req: any) {
    const { id, username } = req.user; // üëà —Ç–µ–ø–µ—Ä req.user –∑'—è–≤–∏—Ç—å—Å—è
    return this.authService.signToken({ id, username });
  }
}
